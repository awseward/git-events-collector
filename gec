#!/usr/bin/env bash

set -euo pipefail

active_log() {
  echo "$("$0" data_dir)/active.log"
}

data_dir() {
  local -r default_data_dir="${XDG_DATA_HOME:-${HOME}/.local/share}/git-events"
  local data_dir="${RUN_BASE_DIR:-${default_data_dir}}"
  data_dir="$(realpath "${data_dir}")"; readonly data_dir

  >&2 mkdir -p "${data_dir}"
  echo "${data_dir}"
}

tsv_to_sqlite() {
  local -r tsv_log="$1"

  # Check if there's even anything in it
  if [ ! -s "${tsv_log}" ]; then
    >&2 echo "empty file ${tsv_log} -- doing nothing"
    rm -f "${tsv_log}"
    return 1
  fi

  local -r sqlite_filepath_template="$("$0" data_dir)/_outbox/dbs/git-events-XXXXXXXX.db"
  >&2 mkdir -p "$(dirname "${sqlite_filepath_template}")"
  local -r sqlite_filepath="$(mktemp "${sqlite_filepath_template}")"

  git_events_collector mvp "${tsv_log}" "${sqlite_filepath}"
  xargs -t rm -f <<< "${tsv_log}"
}

rotate() {
  local -r data_dir="$("$0" data_dir)"

  local -r outbox_dir="${data_dir}/_outbox/logs"; mkdir -p "${outbox_dir}"
  local -r log_ln="${data_dir}/active.log"

  _close_log() {
    local -r src="$1"
    local -r dest="${outbox_dir}/$(basename "${src}")"

    >&2 chmod -v 400 "${src}"
    mv "${src}" "${dest}"
    echo "${dest}"
  }

  # Set up and exit if nothing found
  if [ ! -f "${log_ln}" ]; then
    >&2 echo "${log_ln} does not exist -- setting it up"

    local -r log_new="${data_dir}/$(date +%s).log"
    touch "${log_new}"
    ln -fs "${log_new}" "${log_ln}"

    >&2 echo "current log: ${log_new}"
    return 0
  fi

  local log_active; log_active="$(realpath -e "${log_ln}")"

  if [ "${log_ln}" = "${log_active}" ]; then
    >&2 echo "${log_ln} is not a symlink -- making it one"

    migrated_log="${data_dir}/migrated-$(date +%s).log"
    mv "${log_ln}" "${migrated_log}"
    ln -fs "${migrated_log}" "${log_ln}"
  fi

  log_active="$(realpath -e "${log_ln}")"; readonly log_active

  ### Rotation

  local -r log_inactive="${log_active}"

  # Point symlink at new file
  local -r log_new="${data_dir}/$(date +%s).log"
  touch "${log_new}"
  ln -fs "${log_new}" "${log_ln}"

  _close_log "${log_inactive}"
}

run() {
  echo -en "\n=== " && date

  local -r sqlite_file="$("$0" rotate | xargs -t "$0" tsv_to_sqlite)"
  [ "${sqlite_file}" == '' ] && return 1
  chmod -v 400 "${sqlite_file}"

  xargs -t dw push 'git-events' 'sj://dw-inbox/git-events' <<< "${sqlite_file}"
}

"$@"
